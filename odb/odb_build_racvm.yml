---

- name: Create and deploy Oracle DB VM from template {{ olvm_template }}
  ovirt_vm:
    auth: "{{ ovirt_auth }}"
    name: "{{ node.value.vm_name }}"
    template: "{{ olvm_template }}"
    description: "Cloned from {{ olvm_template }}"
    cluster: "{{ olvm_cluster }}"
    memory: "{{ vm_ram | default('4096MiB') }}"
    cpu_sockets: "{{ vm_cpu | default('2') }}"
    state: running
    cloud_init:
      host_name: "{{ node.value.vm_name + '.' + vm_dns_domain }}"
      user_name: cloud-user
      authorized_ssh_keys: "{{ vm_user_sshpubkey }}"
      dns_servers: "{{ vm_dns }}"
      dns_search: "{{ vm_dns_domain }}"
      nic_name: "{{ vm_pubadap | default('eth0') }}"
      nic_boot_protocol: static
      nic_ip_address: "{{ node.value.vm_ip_address }}"
      nic_gateway: "{{ vm_gateway }}"
      nic_netmask: "{{ vm_netmask }}"
      timezone: "{{ vm_timezone | default('Etc/GMT')}}"
      custom_script: |
        write_files:
          - content: |
              NODE1=
              NODE1IP=
            path: /u01/racovm/netconfig.ini
            owner: oracle:oinstall
            permissions: "0644"
        runcmd:
          - date >/home/cloud-user/date.txt
          - cp /u01/racovm/netconfig.ini /home/cloud-user
          - touch /etc/cloud/cloud-init.disabled
    wait: true

- name: "Attach ASM disks to RAC node {{ node.value.vm_name }}"
  ovirt.ovirt.ovirt_disk:
    auth: "{{ ovirt_auth }}"
    name: "{{ item }}"
    vm_name: "{{ node.value.vm_name }}"
    interface: virtio_scsi
    state: attached
    activate: true
  with_items:
  - "{{ asm_disks }}"

- name: Add RAC node to group rac_vms in-memory hosts file
  ansible.builtin.add_host:
    name: "{{ node.value.vm_name }}"
    groups: rac_vms

- name: Add first RAC node to group rac_vm_first, in-memory hosts file
  ansible.builtin.add_host:
    name: "{{ node.value.vm_name }}"
    groups: rac_vm_first
  when:
    - ( rac_nodes.1.vm_name  == node.value.vm_name )
